/* ### EXEMPLO 1:
Cria uma tabela com um única coluna chamada Date considerando TODAS as datas do modelo (se tiver data de aniversário também entra no processo de criação * problema!)
Calendarauto cria um intervalo de dados sempre do início do ano até o final do ano (anos cheios)
Cria apenas uma coluna com o nome padrão "Date", as demais colunas derivadas da data precisam ser criadas manualmente
https://dax.do/soYgJSgrrmIm4a/ 
https://youtu.be/fKbuZL_T17A */ 


EVALUATE
CALENDARAUTO ()


/* ### Exemplo 2: Utilizando uma coluna específica do modelo
Cria uma tabela com o intervalo correspondente a uma coluna específica. Utilizada na maior parte das vezes.
*/
EVALUATE
VAR vMin = MIN ( Sales[Order Date] ) 
VAR vMax = MAX ( Sales[Order Date] ) 
RETURN
CALENDAR (vMin, vMax)

EVALUATE
VAR vMin = YEAR ( MIN ( Sales[Order Date] ) )
VAR vMax = YEAR ( MAX ( Sales[Order Date] ) )
RETURN
ADDCOLUMNS (
    FILTER (
        CALENDARAUTO( ),
        AND ( YEAR ( [Date] ) >= vMin, YEAR ( [Date] ) <= vMax )
    ),
    "Calendar Year", "CY " & YEAR ( [Date] ),
    "Month Number", MONTH ( [Date] ),
    "Month Name", FORMAT ( [Date], "mmmm" ),    
    "Weekday", FORMAT ( [Date], "dddd" ),
    "Weekday number", WEEKDAY( [Date] ),
    "Quarter", "Q" & TRUNC ( ( MONTH ( [Date] ) - 1 ) / 3 ) + 1
)




/* ### Exemplo 3: Cria uma tabela de datas com o intervalo de um subconjunto de datas 
Em algumas situações onde o modelo de dados possui muitas colunas de datas que precisam de uma tabela de datas.
Pode ser necessário criar com base em um subconjunto destas colunas
*/
EVALUATE
VAR vdatas = UNION( ALL(Sales[Order Date]), ALL(Sales[Delivery Date]) )

// Usar MINX e MAXX para iterar na tabela no contexto de linha
// O nome Order Date é o padrão porque é o primeiro do union
VAR vMin = MINX (vdatas, [Order Date] )
VAR vMax = MAXX (vdatas, [Order Date] )

RETURN
// DISTINCT (vdatas)
ADDCOLUMNS (
    FILTER (
        CALENDARAUTO( ),
        AND ([Date] >= vMin, [Date] <= vMax )
    ),
    "Calendar Year", "CY " & YEAR ( [Date] ),
    "Month Number", MONTH ( [Date] ),
    "Month Name", FORMAT ( [Date], "mmmm" ),    
    "Weekday", FORMAT ( [Date], "dddd" ),
    "Weekday number", WEEKDAY( [Date] ),
    "Quarter", "Q" & TRUNC ( ( MONTH ( [Date] ) - 1 ) / 3 ) + 1
)